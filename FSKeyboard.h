//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "FleksyAPIManagerDelegate.h"
#import "FleksyResponderDelegate.h"

@class FSIKeyboardController, FleksyAPIManager, FleksyResponder;

@interface FSKeyboard : NSObject <FleksyResponderDelegate, FleksyAPIManagerDelegate>
{
    FleksyResponder *fleksyResponder;
    int fleksyKeyboardStatus;
    id <FleksyPrivateDelegate> fleksyPrivateDelegate;
    float iOSversion;
    int callCount;
    FleksyAPIManager *_apiManager;
    BOOL lastReplaceFailed;
    struct _NSRange composingRegion;
    FSIKeyboardController *keyboardController;
    BOOL isAlreadySpoken;
    BOOL composingTextShouldHighlight;
    BOOL _isCollectingData;
    id <FSKeyboardListener> _listener;
}

+ (id)parseApiVersion:(id)arg1;
+ (id)affiliateID;
@property(nonatomic) BOOL isCollectingData; // @synthesize isCollectingData=_isCollectingData;
@property(nonatomic) id <FSKeyboardListener> listener; // @synthesize listener=_listener;
@property BOOL composingTextShouldHighlight; // @synthesize composingTextShouldHighlight;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)respondToAPIError:(int)arg1;
@property(readonly) FSIKeyboardController *theKeyboardController;
- (void)dealloc;
- (void)applicationWillResignActive:(id)arg1;
- (void)applicationDidBecomeActive:(id)arg1;
- (void)didReceiveMemoryWarningNotification:(id)arg1;
- (void)enableReturnKeyNow;
- (id)getSdkVersion;
- (id)getText;
- (void)setSelection:(struct _NSRange)arg1;
- (void)textDidChange:(BOOL)arg1;
- (void)selectionDidChange:(BOOL)arg1;
- (struct _NSRange)getSelection;
- (void)startTypingSession;
- (void)reconfigureTextInputTraits;
- (void)configureShiftKey;
- (void)fleksyResponderDidChange:(id)arg1;
- (void)sendSpeakFromAPI:(id)arg1;
- (void)selectedSuggestionsChangedFromAPI:(int)arg1;
- (void)suggestionsFromAPI:(id)arg1 selectedIndex:(int)arg2;
- (void)dictionaryModifiedFromAPIWithEvent:(int)arg1 word:(id)arg2;
- (void)caseChangeFromAPI:(BOOL)arg1;
- (void)messageReceivedFromAPI:(int)arg1 message:(id)arg2;
- (void)storeComposingRangeStart:(int)arg1 end:(int)arg2;
- (void)updateComposingRects;
- (BOOL)handleReplaceRange:(struct _NSRange)arg1 withText:(id)arg2;
- (BOOL)replaceComposingText:(const struct FLUnicodeString *)arg1;
- (struct FLExternalEditorState)getKeyboardState;
- (BOOL)hasActiveResponder;
- (void)changeKeyboardLayoutForState:(int)arg1;
- (void)changeActiveKeyboardForID:(int)arg1;
- (void)setToggleShift:(int)arg1;
- (void)handleKeyboardChange:(int)arg1;
- (void)handlePreviousKeyboardID;
- (void)handleNextKeyboardID;
- (void)handleNextSuggestion;
- (void)handlePreviousSuggestion;
- (void)handleNewline;
- (void)handleBackspace:(float)arg1;
- (void)handleSpace:(float)arg1;
- (void)handlePoint:(struct CGPoint)arg1;
- (void)deallocateEngineResources;
- (void)loadLanguage:(id)arg1;
- (BOOL)hasRequiredLanguagePack;
- (id)currentLanguagePackPath;
- (void)removeNotifiers;
- (void)initNotifiers;
- (void)generateDataCollectorHeader;
- (id)initWithFrame:(struct CGRect)arg1;
- (struct FLUnicodeString)getNearestCharForPoint:(struct CGPoint)arg1;
- (id)api;
- (void)userDeleteLanguageInvokedByApp;
- (void)setFleksyVoiceFeedback:(BOOL)arg1;
- (void)setFleksyFastDelete:(BOOL)arg1;
- (void)setFleksyUserAutoCorrection:(BOOL)arg1;
- (void)startSession;
- (int)keyboardIDForKeyboardType:(int)arg1;
- (id)keyboardThemeForKeyboardApperance:(int)arg1;
- (int)textFieldTypeForSecureText:(BOOL)arg1;
- (int)fieldActionForReturnKeyType:(int)arg1;
- (int)capitalizationModeForType:(int)arg1;
- (void)configureTextInputTraitsForResponder:(id)arg1;
- (struct CGSize)platformSizeForEngineAPI:(id)arg1 withKeyboardSize:(struct CGSize)arg2;
- (void)setKeys:(map_b5835894)arg1;
- (void)loadKeyPoints:(struct FLUnicodeString *)arg1 point:(struct CGPoint)arg2;
- (void)clearKeyPoints;
- (id)keymapToKeyMapDictOfArrayOfKeyPoints:(id)arg1 keyboardID:(int)arg2 keyboardState:(int)arg3 platformSize:(struct CGSize)arg4;
- (id)makeDictionaryOfArrayOfKeyPointsWithSize:(struct CGSize)arg1;

@end

