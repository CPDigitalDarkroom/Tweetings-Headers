//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "NTLNTwitterClientDelegate.h"

@class NSDate, NSMutableArray, NSObject<NTLNTimelineDelegate>, NSString, NSTimer, NTLNTwitterClient;

@interface NTLNTimeline : NSObject <NTLNTwitterClientDelegate>
{
    NSObject<NTLNTimelineDelegate> *delegate;
    NSMutableArray *timeline;
    NSMutableArray *userColors;
    NSString *archiverCachePath;
    NTLNTwitterClient *activeTwitterClient;
    NSDate *lastReloadTime;
    NSTimer *refreshTimer;
    BOOL readTracker;
    BOOL autoRefresh;
    BOOL evenInv;
    BOOL useColorCategories;
    BOOL updated;
    BOOL reverseSort;
    BOOL getLatest20TweetOnHumanOperation;
    BOOL loadArchive;
    BOOL isGap;
    NSString *gapMaxId;
    NSString *gapSinceId;
    int gapRow;
    NSString *logTime;
    BOOL fromGap;
    BOOL fromCache;
    BOOL isUpdated;
    long long lastSyncId;
    long long remoteSyncId;
    BOOL firstSync;
    BOOL shouldBeRead;
    int whichTimeline;
    BOOL updatedSyncPosition;
    BOOL isUpdating;
}

@property long long remoteSyncId; // @synthesize remoteSyncId;
@property BOOL updated; // @synthesize updated;
@property BOOL firstSync; // @synthesize firstSync;
@property BOOL isUpdating; // @synthesize isUpdating;
@property BOOL reverseSort; // @synthesize reverseSort;
@property(retain, nonatomic) NSDate *lastReloadTime; // @synthesize lastReloadTime;
@property(retain, nonatomic) NSString *logTime; // @synthesize logTime;
@property(readonly) NSString *archiverCachePath; // @synthesize archiverCachePath;
@property(readonly) NSMutableArray *timeline; // @synthesize timeline;
@property int gapRow; // @synthesize gapRow;
@property BOOL updatedSyncPosition; // @synthesize updatedSyncPosition;
@property int whichTimeline; // @synthesize whichTimeline;
@property BOOL shouldBeRead; // @synthesize shouldBeRead;
@property BOOL getLatest20TweetOnHumanOperation; // @synthesize getLatest20TweetOnHumanOperation;
@property BOOL fromCache; // @synthesize fromCache;
@property BOOL fromGap; // @synthesize fromGap;
@property BOOL autoRefresh; // @synthesize autoRefresh;
@property BOOL useColorCategories; // @synthesize useColorCategories;
@property(readonly) NSMutableArray *userColors; // @synthesize userColors;
@property long long lastSyncId; // @synthesize lastSyncId;
@property BOOL readTracker; // @synthesize readTracker;
- (void)timerExpired;
- (void)stopTimer;
- (void)restartTimer;
- (int)badgeCount;
- (void)markAllAsReadInBackground;
- (void)syncTimelineRemote:(long long)arg1;
- (void)syncTimeline:(long long)arg1;
- (void)markAllAsRead;
- (id)allStatuses;
- (id)unreadStatuses;
- (void)hilightByScreenName:(id)arg1;
- (int)indexFromStatusId:(id)arg1;
- (void)clientCancel;
- (BOOL)isClientActive;
- (BOOL)isEven:(int)arg1;
- (void)removeAtIndex:(int)arg1;
- (void)removeStatusesForUser:(id)arg1;
- (id)statusAtIndex:(int)arg1;
- (int)count;
- (void)removeLastReloadTime;
- (void)appendStatuses:(id)arg1;
- (void)getTimelineWithPage:(int)arg1 autoload:(BOOL)arg2;
- (void)getNextTimelineWithPage:(int)arg1 autoload:(BOOL)arg2;
- (void)clientFailedDelegate:(id)arg1;
- (void)clientSucceededDelegate:(id)arg1;
- (void)clientEndDelegate:(id)arg1;
- (void)clientBeginDelegate:(id)arg1;
- (void)twitterClientEnd:(id)arg1;
- (void)twitterClientBegin:(id)arg1;
- (void)twitterClientFailed:(id)arg1 withError:(id)arg2;
- (void)twitterClientFailed:(id)arg1;
- (void)twitterSearchClientSucceeded:(id)arg1 messages:(id)arg2;
- (void)twitterClientSucceeded:(id)arg1 messages:(id)arg2;
- (int)getIndexForStatus:(id)arg1;
- (int)firstUnread;
- (id)secondLatestStatusId;
- (id)bottomStatusId;
- (id)latestStatusId;
- (int)insertStatusToSortedTimeline:(id)arg1;
- (void)removeStatusAtIndex:(int)arg1;
- (int)insertStatusToSortedTimelineAtTop:(id)arg1;
- (int)insertStatusToSortedTimelineNoCompare:(id)arg1;
- (void)saveArchive;
- (void)saveArchiveActiveInBackground;
- (void)saveArchiveInBackground;
- (void)saveArchiveActive;
- (void)loadArchive;
- (id)colorForUser:(id)arg1;
- (void)loadColorArchive;
- (void)resetColorCategories;
- (void)clearAndRemoveCache;
- (void)clear;
- (void)disactivateNoArchive;
- (void)disactivate;
- (void)suspendInBackground;
- (void)suspend;
- (void)activate;
- (void)prefetch;
- (void)dealloc;
- (BOOL)hasArchive;
- (id)initWithDelegate:(id)arg1 withArchiveFilename:(id)arg2 withLoadArchive:(BOOL)arg3;
- (id)getDelegate;
- (id)initWithDelegate:(id)arg1 withArchiveFilename:(id)arg2;

@end

