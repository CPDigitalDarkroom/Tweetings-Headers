//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "UIViewController.h"

#import "FSIKeyboardControlPadProtocol.h"
#import "FSIMasterGestureHandlerListener.h"
#import "FSKeyboardListener.h"
#import "UIAlertViewDelegate.h"

@class FLTutorialManager, FSIControlPadController, FSIKeyPadController<FSIKeyPadControlFlow>, FSKeyboard, FleksyInputView, MySwipeGestureRecognizer, NSMutableArray, NSMutableDictionary, NSString, SwipeFeedbackView, UILongPressGestureRecognizer2, UISwipeAndHoldGestureRecognizer, UIView;

@interface FSIKeyboardController : UIViewController <UIAlertViewDelegate, FSKeyboardListener, FSIMasterGestureHandlerListener, FSIKeyboardControlPadProtocol>
{
    FleksyInputView *fleksyInputView;
    FSIKeyPadController<FSIKeyPadControlFlow> *keyPadController;
    FSIControlPadController *controlPadController;
    SwipeFeedbackView *feedbackView;
    SwipeFeedbackView *feedbackViewBottom;
    SwipeFeedbackView *feedbackViewBottomBar;
    map_b5835894 keyPointMap;
    NSMutableDictionary *keys;
    NSString *TAG_;
    NSMutableArray *pressedKeys_;
    UIView *flickHintsParentViewToUse;
    NSMutableArray *flickHintViews;
    UISwipeAndHoldGestureRecognizer *swipeAndHoldRecognizer;
    UILongPressGestureRecognizer2 *longPressRecognizer;
    MySwipeGestureRecognizer *actionRecognizer2Up;
    MySwipeGestureRecognizer *actionRecognizer2Down;
    MySwipeGestureRecognizer *actionRecognizer2Left;
    MySwipeGestureRecognizer *actionRecognizer2Right;
    FLTutorialManager *tutorialManager;
    BOOL _isCapitalizationLockOn;
    BOOL _isShiftKeyOn;
    FSKeyboard *_keyboard;
    int _keyboardLayoutState;
    int _keyboardID;
    int _cachedKeyboardLayoutState;
    NSString *_TAG;
    NSMutableArray *_pressedKeys;
}

@property(nonatomic) BOOL isShiftKeyOn; // @synthesize isShiftKeyOn=_isShiftKeyOn;
@property(nonatomic) BOOL isCapitalizationLockOn; // @synthesize isCapitalizationLockOn=_isCapitalizationLockOn;
@property(retain, nonatomic) NSMutableArray *pressedKeys; // @synthesize pressedKeys=_pressedKeys;
@property(copy, nonatomic) NSString *TAG; // @synthesize TAG=_TAG;
@property(nonatomic) int cachedKeyboardLayoutState; // @synthesize cachedKeyboardLayoutState=_cachedKeyboardLayoutState;
@property(nonatomic) int keyboardID; // @synthesize keyboardID=_keyboardID;
@property(nonatomic) int keyboardLayoutState; // @synthesize keyboardLayoutState=_keyboardLayoutState;
@property(readonly, nonatomic) FSKeyboard *keyboard; // @synthesize keyboard=_keyboard;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)dealloc;
- (BOOL)modeIsPadPortraitNormal;
- (BOOL)modeIsPadPortraitSpacebar;
- (BOOL)modeIsPhoneLandscapeNormal;
- (BOOL)modeIsPhoneLandscapeSpacebar;
- (void)didReceiveMemoryWarning;
- (void)viewDidDisappear:(BOOL)arg1;
- (void)viewWillDisappear:(BOOL)arg1;
- (void)viewDidAppear:(BOOL)arg1;
- (void)viewWillAppear:(BOOL)arg1;
- (void)viewDidLoad;
- (void)modifyTwoFingerHorizontalAction;
- (void)prepareKeyboardControllerForLayout;
- (void)prepareKeyboardController;
- (void)initNotifiers;
- (unsigned int)supportedInterfaceOrientations;
- (void)isTextBufferEmpty:(BOOL)arg1;
- (void)enablesReturnKeyAutomatically:(BOOL)arg1;
- (void)setFieldAction:(int)arg1;
- (void)setSpaceBarState:(BOOL)arg1;
- (void)dictionaryModifiedWithEvent:(int)arg1 word:(id)arg2;
- (void)selectSuggestionWithIndex:(int)arg1;
- (void)showSuggestions:(id)arg1 selectedIndex:(int)arg2;
- (void)configureCapsLock:(BOOL)arg1;
- (void)configureShift:(BOOL)arg1;
- (void)caseChange:(BOOL)arg1;
- (int)getCachedKeyboardState;
- (int)getKeyboardState;
- (void)setMasterKeyboardID:(int)arg1;
- (int)getMasterKeyboardID;
- (void)tapOccured:(struct CGPoint)arg1;
- (int)forwardAPICapitalizationMode;
- (int)forwardMasterKeyboardID;
- (void)animateLayoutChange;
- (void)previousKeyboardLayoutOrPerformFunction;
- (void)nextKeyboardLayoutOrPerformFunction;
- (void)previousKeyboardID;
- (void)nextKeyboardID;
- (void)toggleShiftKeyOn;
- (void)toggleShiftKeyOff;
- (void)toggleShiftKeyOnNextLetterOnly;
- (void)toggleShiftKeyOffNextLetterOnly;
- (void)toggleShift;
- (void)toggleCapsLock;
- (void)sendNextSuggestion;
- (void)sendPreviousSuggestion;
- (void)sendNewline;
- (void)sendBackspace:(float)arg1;
- (void)sendBackspace;
- (void)sendSpace:(float)arg1;
- (void)sendTouchToListener:(id)arg1;
- (void)markTutorialStepPassed:(id)arg1;
- (void)hoverStopped;
- (void)hoverStarted;
- (void)sendButtonTappedWithPoint:(struct CGPoint)arg1;
- (void)sendButtonTappedWithTouch:(id)arg1;
- (void)handleThemeDidChange:(id)arg1;
- (struct CGPoint)getKeyboardPointForChar:(const struct FLUnicodeString *)arg1;
- (void)restoreKey:(id)arg1 duration:(float)arg2 delay:(float)arg3;
- (struct FLUnicodeString)popupKeyAtPoint:(struct CGPoint)arg1 origin:(struct CGPoint)arg2;
- (void)doSidePopupForPoint:(struct CGPoint)arg1;
- (void)clearTouchTrace:(id)arg1 sharp:(BOOL)arg2;
- (void)doTouchTraceForPoint:(struct CGPoint)arg1 sharp:(BOOL)arg2;
- (void)doPopupForPoint:(struct CGPoint)arg1;
- (void)doPopupForTouch:(id)arg1;
- (id)createKeyForChar:(const struct FLUnicodeString *)arg1 atPoint:(struct CGPoint)arg2 popup:(_Bool)arg3;
- (void)setKeys;
- (void)loadKey:(const struct FLUnicodeString *)arg1 forPoint:(struct CGPoint)arg2;
- (void)clearKeyPoints;
- (void)userDeleteLanguageInvoked;
- (void)finish;
- (void)alertView:(id)arg1 clickedButtonAtIndex:(int)arg2;
- (void)userSettingsInvoked;
- (void)removeAllGestureRecognizersFromView:(id)arg1;
- (void)addAllGestureRecognizersToView:(id)arg1;
- (void)moveAllRecognizerFromView:(id)arg1 ToView:(id)arg2;
- (id)configureActionRecognizerWithView:(id)arg1 target:(id)arg2 action:(SEL)arg3 direction:(unsigned int)arg4;
- (id)configureSwipeAndHoldGestureRecognizerWithView:(id)arg1 target:(id)arg2 action:(SEL)arg3;
- (void)configureKeyboardWithID:(int)arg1 state:(int)arg2;
- (void)showFlickHints:(id)arg1;
- (void)showFlickHintsWithCount:(unsigned int)arg1 direction:(unsigned int)arg2;
- (void)stopFlickAnimations;
- (id)createFlickHintViewWithSize:(float)arg1;
- (id)initWithFrame:(struct CGRect)arg1 keyboard:(id)arg2;
- (void)clearTouchesOnActionRecognizers;
- (id)controlPadController;
- (id)keyPadController;
- (void)replacingText:(id)arg1;

@end

